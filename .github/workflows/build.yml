name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 触发条件：带v前缀的tag推送

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
      fail-fast: false  # 允许单个平台失败不影响其他平台
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt pyinstaller

    - name: Build executable
      shell: bash
      run: |
        # 根据平台构建
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          pyinstaller --onefile --name myapp-windows src/main.py
          cd dist
          zip -r myapp-windows.zip myapp-windows.exe
        elif [[ "$RUNNER_OS" == "macOS" ]]; then
          pyinstaller --onefile --name myapp-macos src/main.py
          cd dist
          zip -r myapp-macos.zip myapp-macos
        else  # Linux
          pyinstaller --onefile --name myapp-linux src/main.py
          cd dist
          zip -r myapp-linux.zip myapp-linux
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4  # 使用最新v4版本
      with:
        name: ${{ runner.os }}-package
        path: dist/*.zip

  release:
    runs-on: ubuntu-latest
    needs: build
    if: success() || failure()  # 即使部分构建失败也创建发布
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4  # 使用最新v4版本
      with:
        path: artifacts
        pattern: '*package'  # 下载所有构建产物
        merge-multiple: true  # 合并所有artifact

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ github.ref_name }}
        files: |
          artifacts/*.zip
